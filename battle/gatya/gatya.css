:root {
    --card-width: 180px;
    --card-height: 250px;
    --primary-color: #4ecdc4;
    --background-color: #1a1a2e;
    --card-background: #2d2d44;
    --text-color: #ffffff;
    --ur-color: #ffd700;
    --sr-color: #ff69b4;
    --r-color: #4169e1;
    --n-color: #808080;
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Noto Sans JP', sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    min-height: 100vh;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

/* ヘッダースタイル */
header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    background: var(--card-background);
    border-radius: 10px;
    margin-bottom: 30px;
}

.player-info {
    display: flex;
    gap: 20px;
    align-items: center;
}

/* カードコンテナスタイル */
.card-container {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 20px;
    padding: 20px;
    margin-bottom: 20px;
}

/* 10連ガチャ用のレイアウト */
.multi-gacha .card-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #1a1a2e;
    background-image: radial-gradient(circle at 10% 20%, rgba(90, 90, 90, 0.1) 0%, rgba(90, 90, 90, 0.1) 5%, transparent 5%), radial-gradient(circle at 90% 80%, rgba(90, 90, 90, 0.1) 0%, rgba(90, 90, 90, 0.1) 5%, transparent 5%);
}

/* カードスタイル */
.card-item {
    width: var(--card-width);
    height: var(--card-height);
    background: var(--card-background);
    border-radius: 10px;
    overflow: hidden;
    position: relative;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.card-image {
    width: 100%;
    height: 70%;
    overflow: hidden;
    transform: translate3d(0, 0, 0);
    transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s; /* アニメーションの設定 */
}

.title {
    text-align: center; /* 中央揃え */
    line-height: 1.5; /* 行間の設定 */
}


.box:hover {
    background-color: #eae9e9; /* ホバー時の背景色 */
    transform: scale(1.05); /* ホバー時に少し拡大 */
    box-shadow: 0 4px 50px rgba(0, 0, 0, 0.3); /* ホバー時のシャドウを強調 */
}

.N {
    box-shadow: 0 0 10px var(--n-color);
}

/* チェックボックススタイル */
.card-checkbox {
    position: absolute;
    top: 3%;
    left: 50%;
    background: #0af;
    width: 500px;
    height: 500px;
    margin-left: -250px;
    margin-top: -250px;
    transform-origin: 50% 48%;
    border-radius: 43%;
    -webkit-animation: drift 3000ms infinite linear;
    animation: drift 3000ms infinite linear;
}

.wave.-three {
    -webkit-animation: drift 5000ms infinite linear;
    animation: drift 5000ms infinite linear;
}

.wave.-two {
    -webkit-animation: drift 7000ms infinite linear;
    animation: drift 7000ms infinite linear;
    opacity: 0.1;
    background: yellow;
}

.box:after {
    content: "";
    display: block;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.gacha-animation {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 20px;
}

/* ガチャ結果表示 */
.gacha-result {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--card-background);
    padding: 30px;
    border-radius: 15px;
    z-index: 1100;
    min-width: 300px;
    text-align: center;
}

.gacha-result h3 {
    color: var(--primary-color);
    margin-bottom: 20px;
}

/* デッキ構築エリア */
.deck-builder {
    display: grid;
    grid-template-columns: 1fr;
    gap: 30px;
    margin-top: 30px;
}

.deck-container {
    background: var(--card-background);
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 30px;
}

.deck-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--card-width), 1fr));
    gap: 20px;
    padding: 20px;
}

/* 保存ボタンエリア */
.deck-controls {
    position: fixed;
    bottom: 20px;
    right: 20px;
    display: flex;
    gap: 15px;
    z-index: 100;
}

#save-deck-button {
    padding: 12px 30px;
    font-size: 16px;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
}

#save-deck-button:disabled {
    background: #666;
    cursor: not-allowed;
}

#save-deck-button.ready {
    animation: pulse 2s infinite;
}

/* カード枚数カウンター */
#card-counter {
    position: fixed;
    bottom: 20px;
    left: 20px;
    padding: 10px 20px;
    background: var(--card-background);
    border-radius: 8px;
    font-size: 14px;
    z-index: 100;
}

/* 通知スタイル */
.notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 25px;
    border-radius: 8px;
    background: var(--primary-color);
    color: white;
    z-index: 1000;
    animation: slideIn 0.5s ease-out;
}

.notification.error {
    background: #ff4757;
}

.notification.success {
    background: #2ed573;
}

/* アニメーション */
@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

/* レスポンシブデザイン */
@media (max-width: 1200px) {
    :root {
        --card-width: 160px;
        --card-height: 220px;
    }

    .container {
        padding: 10px;
    }

    .card-container {
        grid-template-columns: repeat(4, 1fr);
    }

    .multi-gacha .card-container .card {
        flex: 0 0 calc(25% - 20px);
    }
}

@-webkit-keyframes drift {
    from {
    transform: rotate(0deg);
    }
    from {
    transform: rotate(360deg);
    }
}

@keyframes drift {
    from {
    transform: rotate(0deg);
    }
    from {
    transform: rotate(360deg);
    }
}
